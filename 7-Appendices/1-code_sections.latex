\lstset{
    language=Java,
}

\renewcommand{\baselinestretch}{0.9}

\begin{program}
	\caption{Revised version of the Participant execution loop, which has well
	defined and safe behaviour if the list of Participants is altered during the
	execution of this loop. Previously, the fail-fast iteration over the loop
	terminated prematurely when a Participant was added or removed, causing some
	particpants to not be executed.
	}
	\label{ParticipantLoop}
	\lstinputlisting{7-Appendices/code/ParticipantLoop.java}
\end{program}

\begin{program}
  \caption{
    Outline of the implementation of the ScaledDouble class.
    As a concrete implementation of a standard number class, it fufills
	the contracts as both this unscaled integer value and as its scaled
	double value.
	The class is thread-safe, type-safe, and designed to make the minimum
	number of complex ALU calls as possible.
	Some functions have been removed for display
  }
  \label{ScaledDouble}
  \lstinputlisting{7-Appendices/code/ScaledDouble.java}
\end{program}

\begin{program}
  \caption{
    Simulation code for the simplest (single agent) validation simulation
  }
  \label{DeathSim}
  \lstinputlisting{7-Appendices/code/DeathSim.java}
\end{program}

\begin{program}
  \caption{
    CLIPolitics Simulation
  }
  \label{CLIPolitics}
  \lstinputlisting{7-Appendices/code/CLIPolitics.java}
\end{program}

\begin{program}
  \caption{
	Extended Politics Simulation
  }
  \label{pol-ext}
  \lstinputlisting{7-Appendices/code/PoliticsExtended.java}
\end{program}

